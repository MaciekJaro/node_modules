{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\N4xq\\\\Desktop\\\\Projekt ZAW\\\\jd\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport trash from './trash.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [taskInput, updateTaskInput] = useState(\"\");\n  const [toDoList, updateToDOList] = useState([]);\n\n  const inputKeyDown = event => {\n    if (event.keyCode === 13) addNote();\n  };\n  /*\n  /********************************************************\n  * nazwa funkcji: inputKeyDown\n  *\n  * parametry wejściowe: event\n  *\n  * opis funkcji: Sprawdza czy naciśnięty przycisk był \"ENTER\"\n  *\n  * autor: Maciej Jaroszyński\n  * ****************************************************/\n\n\n  const getTaskObject = (description, isComplete) => {\n    return {\n      description,\n      isComplete\n    };\n  };\n  /*\n  /********************************************************\n  * nazwa funkcji: getTaskObject\n  *\n  * parametry wejściowe: description, isComplete\n  *\n  * opis funkcji: zwraca description i isComplete\n  *\n  * autor: Maciej Jaroszyński\n  * ****************************************************/\n\n\n  const addNote = () => {\n    if (!taskInput || !taskInput.length) return;\n    toDoList.push(getTaskObject(taskInput, false));\n    updateToDOList(toDoList);\n    updateTaskInput(\"\");\n  };\n  /*\n  /********************************************************\n  * nazwa funkcji: addNote\n  *\n  * \n  *\n  * opis funkcji: dodaje do listy kolejny element\n  *\n  * autor: Maciej Jaroszyński\n  * ****************************************************/\n\n\n  const deleteTask = index => {\n    let splice = toDoList.filter((item, i) => i !== index);\n    updateToDOList(splice);\n  };\n  /*\n  /********************************************************\n  * nazwa funkcji: deleteTask\n  *\n  * \n  *\n  * opis funkcji: Usuwa element z listy\n  *\n  * autor: Maciej Jaroszyński\n  * ****************************************************/\n\n\n  const markComplete = index => {\n    const list = [...toDoList];\n    list[index].isComplete = !list[index].isComplete;\n    updateToDOList(list);\n  };\n  /*\n  /********************************************************\n  * nazwa funkcji: markComplete\n  *\n  * \n  *\n  * opis funkcji: Zaznacza element listy jako wykonany\n  *\n  * autor: Maciej Jaroszyński\n  * ****************************************************/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading-text\",\n      children: [\"Stw\\xF3rz Liste \", /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"react\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          value: taskInput,\n          onKeyDown: inputKeyDown,\n          onChange: event => updateTaskInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: addNote,\n          children: \"Dodaj\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), toDoList !== null && toDoList !== void 0 && toDoList.length ? toDoList.map((toDoObject, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        itemData: toDoObject,\n        markComplete: markComplete,\n        index: index,\n        deleteTask: deleteTask\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-item-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"react\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 49\n        }, this), \" \\xA0Nie doda\\u0142e\\u015B niczego do listy !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"footer-text\",\n      children: \"Maciej Jaroszy\\u0144ski\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"KPP+nhdzJT8U5ZPa7pBI+nqguaY=\");\n\n_c = App;\n\nfunction ListItem(props) {\n  var _props$itemData;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-item row jc-space-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: props.itemData.isComplete ? 'task-complete' : '',\n      onClick: () => props.markComplete(props.index),\n      children: [props.itemData.isComplete ? `✅ ` : '', \"\\xA0\", (_props$itemData = props.itemData) === null || _props$itemData === void 0 ? void 0 : _props$itemData.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"delete-icon\",\n      src: trash,\n      alt: \"delete-task\",\n      onClick: () => props.deleteTask(props.index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = ListItem;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ListItem\");","map":{"version":3,"names":["React","useState","trash","App","taskInput","updateTaskInput","toDoList","updateToDOList","inputKeyDown","event","keyCode","addNote","getTaskObject","description","isComplete","length","push","deleteTask","index","splice","filter","item","i","markComplete","list","target","value","map","toDoObject","ListItem","props","itemData"],"sources":["C:/Users/N4xq/Desktop/Projekt ZAW/jd/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport trash from './trash.svg'\n\nfunction App() {\n    const [taskInput, updateTaskInput] = useState(\"\");\n    const [toDoList, updateToDOList] = useState([]);\n\n    const inputKeyDown = (event) => {\n        if (event.keyCode === 13) addNote();\n    };\n    /*\n/********************************************************\n* nazwa funkcji: inputKeyDown\n*\n* parametry wejściowe: event\n*\n* opis funkcji: Sprawdza czy naciśnięty przycisk był \"ENTER\"\n*\n* autor: Maciej Jaroszyński\n* ****************************************************/\n    const getTaskObject = (description, isComplete) => {\n        return {\n            description,\n            isComplete\n        }\n    }\n/*\n/********************************************************\n* nazwa funkcji: getTaskObject\n*\n* parametry wejściowe: description, isComplete\n*\n* opis funkcji: zwraca description i isComplete\n*\n* autor: Maciej Jaroszyński\n* ****************************************************/\n    \n    const addNote = () => {\n        if (!taskInput || !taskInput.length)\n            return;\n        toDoList.push(getTaskObject(taskInput, false));\n        updateToDOList(toDoList);\n        updateTaskInput(\"\")\n    };\n/*\n/********************************************************\n* nazwa funkcji: addNote\n*\n* \n*\n* opis funkcji: dodaje do listy kolejny element\n*\n* autor: Maciej Jaroszyński\n* ****************************************************/\n    const deleteTask = (index) => {\n        let splice = toDoList.filter((item, i) => i !== index);\n        updateToDOList(splice);\n    }\n/*\n/********************************************************\n* nazwa funkcji: deleteTask\n*\n* \n*\n* opis funkcji: Usuwa element z listy\n*\n* autor: Maciej Jaroszyński\n* ****************************************************/\n    const markComplete = (index) => {\n        const list = [...toDoList]\n        list[index].isComplete = !list[index].isComplete\n        updateToDOList(list)\n    }\n/*\n/********************************************************\n* nazwa funkcji: markComplete\n*\n* \n*\n* opis funkcji: Zaznacza element listy jako wykonany\n*\n* autor: Maciej Jaroszyński\n* ****************************************************/\n    return (\n        <div className=\"app-background\">\n            <p className=\"heading-text\">Stwórz Liste <span role=\"img\" aria-label=\"react\"></span></p>\n            <div className=\"task-container column\">\n                <div className=\"row\">\n                    <input\n                        className=\"text-input\"\n                        value={taskInput}\n                        onKeyDown={inputKeyDown}\n                        onChange={(event) => updateTaskInput(event.target.value)}\n                    />\n                    <button className=\"add-button\" onClick={addNote}>\n                        Dodaj\n                    </button>\n                </div>\n                {toDoList?.length ?\n                    toDoList.map((toDoObject, index) =>\n                        <ListItem key={index} itemData={toDoObject} markComplete={markComplete}\n                                  index={index} deleteTask={deleteTask}/>) :\n                    <p className=\"no-item-text\"><span role=\"img\" aria-label=\"react\"></span> &nbsp;Nie dodałeś niczego do listy !</p>}\n            </div>\n            <p className=\"footer-text\">Maciej Jaroszyński</p>\n        </div>\n    );\n}\n\nfunction ListItem(props) {\n    return (\n        <div className=\"list-item row jc-space-between\">\n            <span className={props.itemData.isComplete ? 'task-complete' : ''}\n                  onClick={() => props.markComplete(props.index)}>{props.itemData.isComplete ? `✅ ` : ''}&nbsp;{props.itemData?.description}</span>\n            <img className=\"delete-icon\" src={trash} alt=\"delete-task\"\n                 onClick={() => props.deleteTask(props.index)}/>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}